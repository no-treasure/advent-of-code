import { assertEquals } from "jsr:@std/assert";
import { partTwo } from "./part-two.ts";

// Deno.test({
//   name: "partOne should return 3",
//   fn: () => {
//     assertEquals(
//       partTwo([
//         [".", ".", ".", ".", ".", "0", "."],
//         [".", ".", "4", "3", "2", "1", "."],
//         [".", ".", "5", ".", ".", "2", "."],
//         [".", ".", "6", "5", "4", "3", "."],
//         [".", ".", "7", ".", ".", "4", "."],
//         [".", ".", "8", "7", "6", "5", "."],
//         [".", ".", "9", ".", ".", ".", "."],
//       ]),
//       3,
//     );
//   },
// });

// Deno.test({
//   name: "partOne should return 13",
//   fn: () => {
//     assertEquals(
//       partTwo([
//         [".", ".", "9", "0", ".", ".", "9"],
//         [".", ".", ".", "1", ".", "9", "8"],
//         [".", ".", ".", "2", ".", ".", "7"],
//         ["6", "5", "4", "3", "4", "5", "6"],
//         ["7", "6", "5", ".", "9", "8", "7"],
//         ["8", "7", "6", ".", ".", ".", "."],
//         ["9", "8", "7", ".", ".", ".", "."],
//       ]),
//       13,
//     );
//   },
// });

// Deno.test({
//   name: "partOne should return 227",
//   fn: () => {
//     assertEquals(
//       partTwo([
//         ["0","1","2","3","4","5"],
//         ["1","2","3","4","5","6"],
//         ["2","3","4","5","6","7"],
//         ["3","4","5","6","7","8"],
//         ["4",".","6","7","8","9"],
//         ["5","6","7","8","9","."],
//         ]),
//       227,
//     );
//   },
// });

Deno.test({
  name: "partOne should return 81",
  fn: () => {
    assertEquals(
      partTwo([
        ["8", "9", "0", "1", "0", "1", "2", "3"],
        ["7", "8", "1", "2", "1", "8", "7", "4"],
        ["8", "7", "4", "3", "0", "9", "6", "5"],
        ["9", "6", "5", "4", "9", "8", "7", "4"],
        ["4", "5", "6", "7", "8", "9", "0", "3"],
        ["3", "2", "0", "1", "9", "0", "1", "2"],
        ["0", "1", "3", "2", "9", "8", "0", "1"],
        ["1", "0", "4", "5", "6", "7", "3", "2"],
      ]),
      81,
    );
  },
});
